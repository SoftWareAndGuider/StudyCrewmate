<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/1.0.0/mdb.min.css" rel="stylesheet"/>
    <title>Study Crewmate - Mate Study Room</title>
  </head>
  <body class="bg-dark">

    <div class="container p-3">
      <div class="row bg-white shadow p-3">
        <br/>
        <div class="col-md text-center">
          <h5 class="card-title"><strong>나: <%= user.username %></strong></h5>
          <video style="height: 38vh;" class="bg-dark w-100 img-fluid shadow-2-strong" autoplay="true" id="myvideo"></video>
          <canvas style="display:none;" id="mypreview"></canvas>
        </div>
        <div class="col-md text-center">
          <h5 class="card-title" id="mateid"><strong>메이트: (접속 대기중...)</strong></h5>
          <img src=""id="matevid" class="img-fluid shadow-2-strong" onerror="this.src = '/src/room/alt.png'" style="width: 100%; height: 38vh; border: none;">
          <br>
        </div>  
      </div><br>
      <div class="row bg-white shadow p-3">
        <div class="col-md">
          <div class="p-3" id="chatscroll" style="overflow-y: auto; height: 300px;">
            <div id="chat">
              <p><strong>System</strong> room:<%= roomid %>에 연결되었습니다!</p>
            </div>
          </div>
          <div class="input-group">
            <input
              type="text"
              id="chattinginput"
              class="form-control"
              placeholder="보낼 내용을 입력해주세요."
              aria-describedby="button-addon2"
            />
            <button
              class="btn btn-success"
              type="button"
              onclick="chatsend()"
              data-ripple-color="dark"
            >
              보내기
            </button>
          </div>
          
        </div>
      </div><br>
      <div class="row shadow p-3">
        <div class="col-md">
          <a class="btn btn-danger btn-lg btn-block" href="/" role="button">세션 나가기</a>
        </div>
      </div>
    </div>
<!--     
  <div class="card text-center">

    </div> -->

    <script src="/socket.io/socket.io.min.js"></script>
    <script>

      let focus = true
      const socket = io()
      socket.on('chat:<%= roomid %>', function (author, msg) {
        console.log(author, msg)
        document.getElementById('chat').innerHTML += `<p><strong>${author}</strong> ${msg}</p>`
        document.getElementById('chatscroll').scrollBy(0, 9999)
      })

      window.onfocus = function () {
        focus = true
      }
      window.onblur = function () {
        focus = false
      }

      document.getElementById('chattinginput').onkeypress = function (ev) {
        if (ev.key !== 'Enter') return
        chatsend()
      }

      function chatsend() {
        if (document.getElementById('chattinginput').value === '') return
        socket.emit('chat', '<%= roomid %>', getCookie('session'), document.getElementById('chattinginput').value)
        document.getElementById('chattinginput').value = ''
      }
      
      let canvas = document.getElementById("mypreview");
      let context = canvas.getContext('2d');
  
      canvas.width = 700;
      canvas.height = 500;
  
      context.width = canvas.width;
      context.height = canvas.height;
  
      let video = document.getElementById("myvideo")

  
      function loadCamera(stream){
        try {
            video.srcObject = stream
        } 
        
        catch (error) {
          video.src = URL.createObjectURL(stream)
        }
      }
  
      function loadFail(){
      }
  
      function Draw(video,context){
        context.drawImage(video,0,0,context.width,context.height)
        socket.emit('roomvid', '<%= roomid %>', getCookie('session'), encodeURIComponent(canvas.toDataURL('image/webp')))
      }
      
      window.onload = () => {
        navigator.getUserMedia = ( navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msgGetUserMedia )
    
        if(navigator.getUserMedia)
        {
            navigator.getUserMedia({
                video: true, 
                audio: false
            },loadCamera,loadFail)
        }
      }

      setInterval(() => {
        if (focus) return
        socket.emit('chat', '<%= roomid %>', getCookie('session'), '<strong>님이 집중하지 않고 있습니다</strong>')
      }, 10000)

      setInterval(function(){
        Draw(video,context)
      }, 0.1)

      console.log('room:<%= roomid %>')
      const mate = document.getElementById('matevid')
      
      let count = -1
      setInterval(() => {
        if (count === -1) return
        if (count < 1) {
          alert('상대방이 접속을 종료했습니다.')
          return window.location.replace('/')
        }

        count = 0
      }, 2000)

      socket.on('room:<%= roomid %>', (session, username, data) => {
        if (session === getCookie('session')) return
        count++
        document.getElementById('mateid').innerText = '메이트: ' + username
        mate.setAttribute('src', decodeURIComponent(data))
      })

      function getCookie(cname) {
        let name = cname + "="
        let decodedCookie = decodeURIComponent(document.cookie)
        let ca = decodedCookie.split(';');
        for(let i = 0; i <ca.length; i++) {
          let c = ca[i];
          while (c.charAt(0) == ' ') {
            c = c.substring(1);
          }
          if (c.indexOf(name) == 0) {
            return c.substring(name.length, c.length);
          }
        }
        return "";
      }
    </script>
  </body>
</html>
